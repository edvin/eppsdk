#############################################################
# Copyright (C) 2004 VeriSign, Inc.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.Ê See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MAÊ 02111-1307Ê USA
#
# http://www.verisign.com/nds/naming/namestore/techdocs.html
#############################################################


############################################################
# Log Configuration Mode.  The mode controls the
# way by which the logging facility (Log4J) is initialized.
# There are three different modes:
#
# 	BASIC - Initialize logging using EPP.LogLevel
#           and EPP.LogFile
#   CFGFILE - Initialize logging using EPP.LogCfgFile and
#             optionally EPP.LogCfgFileWatch
#   CUSTOM	- SDK will not initialize the logging facility
#             and it is left up to the client application.
#
# The Server Stub does not consult EPP.LogMode, and will
# initialize its logging facility based on the following:
#    If EPP.LogCfgfile is defined
#       Use EPP.LogCfgFile and use EPP.LogCfgFileWatch if
#       defined
#    Else if EPP.LogFile and EPP.LogLevel is defined
#       Use EPP.LogFile and use EPP.LogLevel
#    Else
#       Print error and stop program.
############################################################
EPP.LogMode = CFGFILE


############################################################
# Log4J Log Level.  The root category will be set to
# on of the following priorities in order of severity:
# 	DEBUG
# 	INFO
# 	WARN
# 	ERROR
# 	FATAL
# ############################################################
# EPP.LogLevel = DEBUG


############################################################
# Log4J Log File Name.  Logs will be appended to
# the log file.
############################################################
# EPP.LogFile  = epp.log

############################################################
# Log4J XML configuration file used to defined the log
# levels and the appenders (file, syslog, etc.).
############################################################
EPP.LogCfgFile = logconfig.xml


############################################################
# Interval in milliseconds to monitor for changes to
# EPP.LogCfgFile.  If EPP.LogCfgFile is updated, the
# log settings will be re-loaded.
############################################################
EPP.LogCfgFileWatch = 5000



############################################################
# Connection and read timeout in milliseconds.
# A setting of 0 indiciates no timeout.  This setting
# applies to both the client and the server.
############################################################
EPP.ConTimeOut       = 50000


############################################################
# Concrete client socket class.  Possible settings include:
#
# 	com.verisign.epp.transport.client.EPPPlainClientSocket
#		Plain TCP/IP socket connection(s)
#
#	com.verisign.epp.transport.client.EPPPlainClientFile
#		File based connection.  Input file name
#		is set to EPP.ServerName and the output file name is "EPPOutput".
#
#	com.verisign.epp.transport.client.EPPSSLClientSocket
#		SSL TCP/IP socket connection(s).
#		Only supported with Java 2 and the JSSE extension.
############################################################
EPP.ClientSocketName = com.verisign.epp.transport.client.EPPPlainClientSocket
#EPP.ClientSocketName = com.verisign.epp.transport.client.EPPSSLClientSocket


############################################################
# Host name or IP Address that the server will listen on
# and the client will connect to.  EPP.ServerName is also
# the input file name when EPP.ClientSocketName is set
# to com.verisign.epp.transport.client.EPPPlainClientFile
############################################################
EPP.ServerName       = localhost

############################################################
# Port that the server will liston on and the client will
# connect to.
############################################################
EPP.ServerPort       = 1700

############################################################
# Concrete server socket class.  Possible settings include:
#
# 	com.verisign.epp.transport.client.EPPPlainServer
#		Plain TCP/IP socket connection(s)
#
#	com.verisign.epp.transport.client.EPPSSLServer
#		SSL TCP/IP socket connection(s).
#		Only supported with Java 2 and the JSSE extension.
############################################################
EPP.ServerSocketName = com.verisign.epp.transport.server.EPPPlainServer
#EPP.ServerSocketName = com.verisign.epp.transport.server.EPPSSLServer


############################################################
# List of fully qualified EPP Mapping Factory class names.  There
# is one EPP Mapping Factory per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec).
############################################################
EPP.MapFactories = com.verisign.epp.codec.domain.EPPDomainMapFactory
EPP.ProtocolExtensions=
EPP.CmdRspExtensions=com.verisign.epp.codec.whois.EPPWhoisExtFactory

############################################################
# List of fully qualified EPP Event Handler class names.  There
# is one EPP Event Handler per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec).
############################################################
EPP.ServerEventHandlers = com.verisign.epp.serverstub.GenHandler com.verisign.epp.serverstub.WhoisDomainHandler

############################################################
# List of fully qualified EPP Poll Handler class names.  There
# is one EPP Poll Handler per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec) that
# supports Poll messages.
############################################################
EPP.PollHandlers = 

############################################################
# EPP Greeting Server Name.  Default value is "EPP Server Stub"
############################################################
#EPP.GreetingServerName = EPP Server Stub

###########################################################
# SSL Protocol.  One of the following values is supported:
#
# SSL Supports some version of SSL
# SSLv2 Supports SSL version 2 or higher
# SSLv3 Supports SSL version 3
# TLS Supports some version of TLS
# TLSv1 Supports TLS version 1
###########################################################
EPP.SSLProtocol=TLS

###########################################################
# SSL key algorithm.  SunX509 is the most common value.
###########################################################
EPP.SSLKeyManager=SunX509

###########################################################
# SSL Keystore file type.  JKS is the most common value.
S###########################################################
EPP.SSLKeyStore=JKS

###########################################################
# SSL identity keystore file name.  
###########################################################
EPP.SSLKeyFileName=../lib/keystore/testkeys

###########################################################
# SSL passphrases.  EPP.SSLPassPhrase is required 
# and is needed to open the keystore file.  
# EPP.SSLKeyPassPhrase is optional, is used to 
# access the private key of the keystore file when 
# the keystore file passphrase is different from the 
# private key passphrase.  If EPP.SSLKeyPassPhrase is 
# not defined, EPP.SSLPassPhrase is used for both 
# passphrases.
###########################################################
EPP.SSLPassPhrase=passphrase
#EPP.SSLKeyPassPhrase=

###########################################################
# Sets the SSL debug system property, which can 
# be either "none" for no debug or "all" for 
# all debug.
###########################################################
#javax.net.debug=all
javax.net.debug=none

###########################################################
# Optional trust file store properties.  If 
# EPP.SSLTrustStoreFileName is not defined, the 
# JRE trust store will be used.  If EPP.SSLTrustFileName
# is specified, than the file must exist and the 
# EPP.SSLTrustStorePassPhrase must be defined.
###########################################################
EPP.SSLTrustStoreFileName=../lib/keystore/testkeys
EPP.SSLTrustStorePassPhrase=passphrase


##########################################################
# PoolMan - Generic Pool Manager
#
# Client default options
#
# initialObjects=1
# minimumSize=0
# maximumSize=Integer.MAX_VALUE
# maximumSoft=true
# objectTimeout=1200 (seconds)
# userTimeout=1200 (seconds)
# skimmerFrequency=660 (seconds)
# shrinkBy=5
# logFile=System.out
# debugging=false
#
#########################################################
PoolMan.Client.name=clientpool
PoolMan.Client.objectType=com.verisign.epp.util.EPPClientPool
PoolMan.Client.logFile=clientpool.log
PoolMan.Client.initialObjects=5
PoolMan.Client.minimumSize=5
PoolMan.Client.debugging=false

##########################################################
# PoolMan - Generic Pool Manager
#
# Server default options
#
# initialObjects=1
# minimumSize=0
# maximumSize=Integer.MAX_VALUE
# maximumSoft=true
# objectTimeout=1200 (seconds)
# userTimeout=1200 (seconds)
# skimmerFrequency=660 (seconds)
# shrinkBy=5
# logFile=System.out
# debugging=false
#
#########################################################
PoolMan.Server.name=serverpool
PoolMan.Server.objectType=com.verisign.epp.util.EPPServerPool
PoolMan.Server.initialObjects=10
PoolMan.Server.minimumSize=10
PoolMan.Server.logFile=serverpool.log
PoolMan.Server.debugging=false

#########################################################
# Schema Validation settings.  Both settings are optional and default to false. 
# 
# EPP.Validating turns on schema validation.  
# EPP.FullSchemaChecking turns on very strict schema validation
# which my be process intensive.  To turn on EPP.FullSchemaChecking 
# both properties must be set to true.
#########################################################
EPP.Validating=false
EPP.FullSchemaChecking=false

