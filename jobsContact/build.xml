<!--
Copyright (C) 2004 VeriSign, Inc.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-0107  USA

http://www.verisign.com/nds/naming/namestore/techdocs.html
-->

<project name="EPP SDK-JOBSCONTACT" default="jar" basedir=".">

	<import file="${basedir}/common-targets.xml"/>	

	<!-- SDK home directory -->
    <property name="sdk.home.dir" location=".."/>

	<!-- Ensure environment variables are set to env prefixed properties -->
	<property environment="env"/>

	<!-- All properties can be overridden in build.properties -->
    <property file="${basedir}/build.properties"/>

	<!-- Gen directories -->
    <property name="jobsContact.gen.dir" value="${sdk.home.dir}/gen"/>
    <property name="jobsContact.gen.src.dir" value="${jobsContact.gen.dir}/java"/>


	<!-- Contact directories -->
    <property name="jobsContact.contact.dir" value="${sdk.home.dir}/contact"/>
    <property name="jobsContact.contact.src.dir" value="${jobsContact.contact.dir}/java"/>

	<!-- Temporary directory used for distribution -->
    <property name="jobsContact.tmp.dir" location="${jobsContact.dir}/tmp"/>

	<!-- compiler option properties -->
    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="on"/>

	<!-- classpath to use for compilation tasks -->
	<path id="jobsContact.compile.classpath">
		<fileset dir="${jobsContact.lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${jobsContact.epp.lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- classpath to use for compilation tasks -->
	<path id="jobsContact.test.classpath">
		<fileset dir="${jobsContact.epp.lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<path refid="jobsContact.compile.classpath"/>
	</path>

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target 	name="init"
			description="Initializes the build for rest of targets ">

	<!-- set time stamp properties -->
    <tstamp/>

	<!-- Give build.version a default value of SNAPSHOT -->
	<property name="build.version" value="SNAPSHOT"/>

    <echo message="----------- ${ant.project.name} ${build.version} ------------"/>

	<mkdir dir="${jobsContact.results.dir}" />
	<mkdir dir="${jobsContact.build.dir}" />
	<mkdir dir="${jobsContact.epp.lib.dir}" />
  </target>

  <!-- =================================================================== -->
  <!-- Builds the epp-gen.jar file               		                   -->
  <!-- =================================================================== -->
  <target 	name="jar-gen"
  			description="Build the dependent epp-gen.jar file" >
		<ant dir="${jobsContact.gen.dir}" target="jar" />
  </target>

  <!-- =================================================================== -->
  <!-- Cleans the epp-gen files               		                       -->
  <!-- =================================================================== -->
  <target 	name="clean-gen"
  			description="Clean the epp-gen files" >
		<ant dir="${jobsContact.gen.dir}" target="clean" />
  </target>

  <!-- =================================================================== -->
  <!-- Builds the epp-contact.jar file               		                   -->
  <!-- =================================================================== -->
  <target 	name="jar-contact"
  			description="Build the dependent epp-contact.jar file" >
		<ant dir="${jobsContact.contact.dir}" target="jar" />
  </target>

  <!-- =================================================================== -->
  <!-- Cleans the epp-contact files               		                       -->
  <!-- =================================================================== -->
  <target 	name="clean-contact"
  			description="Clean the epp-contact files" >
		<ant dir="${jobsContact.contact.dir}" target="clean" />
  </target>

  <!-- =================================================================== -->
  <!-- Compiles source files                                     		   -->
  <!-- =================================================================== -->
  <target 	name="compile" depends="init, jar-gen, jar-contact"
  			description="Compile EPP SDK-jobsContact source files" >

    <echo message="${ant.project.name} ${build.version} Compile"/>
    <javac srcdir="${jobsContact.src.dir}"
		   destdir="${jobsContact.build.dir}"
           debug="${debug}"
           optimize="${optimize}"
		   deprecation="${deprecation}"
		   failonerror="true">

		<classpath refid="jobsContact.compile.classpath" />
	</javac>

  </target>

  <!-- =================================================================== -->
  <!-- Creates epp-jobsContact.jar                                                -->
  <!-- =================================================================== -->
  <target 	name="jar" depends="compile"
  			description="Generates EPP SDK-jobsContact .jar file (default)" >

	<!-- Set default value of build.version to SNAPSHOT -->
	<property name="build.version" value="SNAPSHOT"/>

	<jar jarfile="${jobsContact.epp.lib.dir}/epp-jobsContact.jar" >
			<manifest>
					<attribute name="baseline" value="EPP-CONTACT-SDK-${build.version}"/>
			</manifest>
		<fileset dir="${jobsContact.build.dir}"
			includes="com/**/*.class" />
		<fileset dir="${jobsContact.dir}"
			includes="schemas/*.xsd" />
	</jar>

  </target>

  <!-- =================================================================== -->
  <!-- Creates epp-jobsContact-src.jar                                     -->
  <!-- =================================================================== -->
  <target 	name="jar-src" depends="init"
  			description="Generates EPP SDK-jobsContact-src.jar file " >
		
		<mkdir dir="${jobsContact.dist.dir}/jar-src" />
	
		<!-- Create source .jar distribution -->
		<zip destfile="${jobsContact.dist.dir}/jar-src/epp-jobsContact-${build.version}-src.jar">			
			<zipfileset dir="${jobsContact.dir}/java" includes="com/**/*.java">				
			</zipfileset>			
		</zip>
  </target>
  
  <!-- =================================================================== -->
  <!-- Formats the source code using Jalopy                                -->
  <!-- =================================================================== -->
  <target name="format"
		  description="Format the source code">
		  		<taskdef name="jalopy"
				 classname="de.hunsicker.jalopy.plugin.ant.AntPlugin">
			<classpath>
				<fileset dir="${jobsContact.lib.dir}/jalopy">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>
		<jalopy fileformat="unix"
				convention="${jobsContact.lib.dir}/jalopy/sdk-convention.xml"
				loglevel="info"
				threads="2"
				classpathref="jobsContact.compile.classpath">
				<fileset dir="${jobsContact.src.dir}">
					<include name="**/*.java"/>
				</fileset>
		</jalopy>

  </target>

  <!-- =================================================================== -->
  <!-- Creates the HTML API documentation                                  -->
  <!-- =================================================================== -->
  <target 	name="doc"
  			description="Generate EPP SDK-jobsContact HTML API documentation" >

    <mkdir dir="${jobsContact.doc.dir}/html"/>
    <javadoc packagenames="com.verisign.epp.*"
             sourcepath="${jobsContact.src.dir}:${jobsContact.gen.src.dir}:${jobsContact.contact.src.dir}"
             destdir="${jobsContact.doc.dir}/html"
             author="true"
             version="true"
             use="true"
             splitindex="true"
			 breakiterator="true"
             noindex="false"
             windowtitle="${ant.project.name} API"
             doctitle="${ant.project.name}"
             bottom="Copyright &#169; VeriSign Inc. All Rights Reserved.">
		<classpath refid="jobsContact.compile.classpath" />
	</javadoc>

  </target>



	<!-- =================================================================== -->
	<!-- Ensure that build.version is set                                    -->
	<!-- =================================================================== -->
	<target name="check-build-version" unless="build.version">
		<fail message="Must set build.version with -Dbuild.version=X"/>
	</target>

	<!-- =================================================================== -->
	<!-- Creates SDK source distribution                                     -->
	<!-- =================================================================== -->
	<target name="dist-src" depends="check-build-version, init"
				description = "Creates SDK source distribution (-Dbuild.version required)" >
		<mkdir dir="${jobsContact.dist.dir}" />

		<!-- Create source .zip distribution -->
		<zip destfile="${jobsContact.dist.dir}/epp-jobsContact-${build.version}-src.zip">
			<zipfileset dir="${jobsContact.license.dir}" prefix="eppsdk/license"/>
			<zipfileset dir="${jobsContact.lib.dir}" prefix="eppsdk/lib">
				<exclude name="epp/**"/>
			</zipfileset>
			<zipfileset dir="${jobsContact.epp.lib.dir}" prefix="eppsdk/lib/epp">
				<include name="${jobsContact.epp.lib.dir}/epp-gen-${build.version}.jar"/>
			</zipfileset>
			<zipfileset dir="${jobsContact.dir}" prefix="eppsdk/jobsContact">
				<exclude name="junit*"/>
				<exclude name="*.log*"/>
				<exclude name="*.err"/>
				<exclude name="build-bin.xml"/>
				<exclude name="doc/*.doc"/>
				<exclude name="doc/html/**"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
			</zipfileset>
		</zip>

		<!-- Create source .tar.gz distribution -->
		<tar destfile="${jobsContact.dist.dir}/epp-jobsContact-${build.version}-src.tar.gz"
			compression="gzip">
			<tarfileset dir="${jobsContact.license.dir}" prefix="eppsdk/license"/>
			<tarfileset dir="${jobsContact.lib.dir}" prefix="eppsdk/lib">
				<exclude name="epp/**"/>
			</tarfileset>
			<tarfileset dir="${jobsContact.dir}" mode="755" prefix="eppsdk/jobsContact">
				<exclude name="junit*"/>
				<exclude name="*.log*"/>
				<exclude name="*.err"/>
				<exclude name="build-bin.xml"/>
				<exclude name="doc/*.doc"/>
				<exclude name="doc/html/**"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
			</tarfileset>
		</tar>

	</target>



	<!-- =================================================================== -->
	<!-- Creates SDK binary distribution                                     -->
	<!-- =================================================================== -->
	<target name="dist-bin" depends="check-build-version, jar, test, doc"
				description = "Creates SDK binary distribution (-Dbuild.version required)" >
		<mkdir dir="${jobsContact.dist.dir}" />
		<mkdir dir="${jobsContact.tmp.dir}" />

		<copy file="${jobsContact.dir}/build-bin.xml" tofile="${jobsContact.tmp.dir}/build.xml"/>


		<!-- Create binary .zip distribution -->
		<zip destfile="${jobsContact.dist.dir}/epp-jobsContact-${build.version}-bin.zip">
			<zipfileset dir="${jobsContact.license.dir}" prefix="eppsdk/license"/>
			<zipfileset dir="${jobsContact.lib.dir}" prefix="eppsdk/lib"/>
			<zipfileset dir="${jobsContact.tmp.dir}" includes="build.xml" prefix="eppsdk/jobsContact"/>
			<zipfileset dir="${jobsContact.dir}" prefix="eppsdk/jobsContact">
				<exclude name="*.log"/>
				<exclude name="*.err"/>
				<exclude name="java/**"/>
				<exclude name="schemas/**"/>
				<exclude name="build.xml"/>
				<exclude name="build-bin.xml"/>
				<exclude name="doc/*.doc"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
				<exclude name="tmp/**"/>
			</zipfileset>
		</zip>

		<!-- Create binary .tar.gz distribution -->
		<tar destfile="${jobsContact.dist.dir}/epp-jobsContact-${build.version}-bin.tar.gz"
			compression="gzip">
			<tarfileset dir="${jobsContact.license.dir}" prefix="eppsdk/license"/>
			<tarfileset dir="${jobsContact.lib.dir}" prefix="eppsdk/lib"/>
			<tarfileset dir="${jobsContact.tmp.dir}" includes="build.xml" prefix="eppsdk/jobsContact"/>
			<tarfileset dir="${jobsContact.dir}" mode="755" prefix="eppsdk/jobsContact">
				<exclude name="*.log"/>
				<exclude name="*.err"/>
				<exclude name="java/**"/>
				<exclude name="schemas/**"/>
				<exclude name="build.xml"/>
				<exclude name="build-bin.xml"/>
				<exclude name="doc/*.doc"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
				<exclude name="tmp/**"/>
			</tarfileset>
		</tar>

		<delete dir="${jobsContact.tmp.dir}"/>
	</target>

	<!-- =================================================================== -->
	<!-- Creates SDK distributions						                     -->
	<!-- =================================================================== -->
	<target name="dist" depends="dist-src, dist-bin"
				description = "Creates SDK distributions (-Dbuild.version required)" >
	</target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target 	name="clean" depends="init, clean-gen, clean-contact"
			description="Clean EPP SDK-jobsContact compiled files" >

		<!-- Clean build directory -->
		<delete dir="${jobsContact.build.dir}" quiet="true"/>

		<!-- Clean the EPP lib directory -->
		<delete dir="${jobsContact.epp.lib.dir}" quiet="true"/>

		<!-- Clean results directory -->
		<delete dir="${jobsContact.results.dir}" quiet="true"/>

		<!-- Clean log files -->
		<delete>
			<fileset dir="${jobsContact.dir}" includes="*.log, *.err"/>
		</delete>

		<!-- Clean generated documentation files -->
		<delete dir="${jobsContact.doc.dir}/html" quiet="true"/>

		<!-- Clean distribution directory -->
		<delete dir="${jobsContact.dist.dir}" quiet="true"/>

		<!-- Clean the tmp directory -->
		<delete dir="${jobsContact.tmp.dir}" quiet="true"/>

  </target>

</project>

<!-- End of file -->
