<!--
Copyright (C) 2004 VeriSign, Inc.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser NameStoreeral Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser NameStoreeral Public License for more details.

You should have received a copy of the GNU Lesser NameStoreeral Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-0107  USA

http://www.verisign.com/nds/naming/namestore/techdocs.html
-->
<project name="EPP SDK-NameStore" default="jar" basedir=".">
	
	<import file="${basedir}/common-targets.xml"/>	

	<property name="build.version" value="SNAPSHOT"/>
	
	<!-- SDK home directory -->
    <property name="sdk.home.dir" location="../.."/>

	<!-- Ensure environment variables are set to env prefixed properties -->
	<property environment="env"/>

	<!-- All properties can be overridden in build.properties -->
    <property file="${basedir}/build.properties"/>

	<!-- Temporary directory used for distribution -->
    <property name="namestore.tmp.dir" location="${namestore.dir}/tmp"/>
	
	<!-- compiler option properties -->
    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="on"/>

	<!-- source path for javadoc generation -->
	<path id="namestore.src.path">
		<pathelement location="${gen.src.dir}" />
		<pathelement location="${domain.src.dir}" />
		<pathelement location="${host.src.dir}" />
		<pathelement location="${namestoreext.src.dir}" />
		<pathelement location="${rgp.src.dir}" />
		<pathelement location="${sync.src.dir}" />
		<pathelement location="${nsfinance.src.dir}" />
		<pathelement location="${idn.src.dir}" />
		<pathelement location="${whois.src.dir}" />
		<pathelement location="${suggestions.src.dir}" />
		<pathelement location="${namestore.src.dir}" />
		<pathelement location="${contact.src.dir}" />
		<pathelement location="${jobscontact.src.dir}" />
		<pathelement location="${secdns.src.dir}" />
		<pathelement location="${premiumdomain.src.dir}" />
		<pathelement location="${whowas.src.dir}" />
		<pathelement location="${coa.src.dir}" />
	</path>

	<!-- classpath to use for compilation tasks -->
	<path id="namestore.compile.classpath">
		<fileset dir="${namestore.lib.dir}">
			<include name="*.jar"/>
		</fileset>
			<fileset dir="${namestore.epp.lib.dir}">
				<include name="epp-gen.jar"/>
				<include name="epp-domain.jar"/>
				<include name="epp-host.jar"/>
				<include name="epp-namestoreext.jar"/>
				<include name="epp-rgp.jar"/>
				<include name="epp-sync.jar"/>
				<include name="epp-nsfinance.jar"/>
				<include name="epp-idn.jar"/>
				<include name="epp-whois.jar"/>
				<include name="epp-suggestion.jar"/>
				<include name="epp-contact.jar"/>
				<include name="epp-jobsContact.jar"/>
				<include name="epp-secdns.jar"/>
				<include name="epp-premiumdomain.jar"/>
				<include name="epp-whowas.jar"/>
				<include name="epp-coa.jar"/>
			</fileset>		
	</path>
		

	<!-- classpath to use for compilation tasks -->
	<path id="namestore.test.classpath">
		<pathelement location="${basedir}/tmp"/>
		<fileset dir="${namestore.epp.lib.dir}">
			<include name="epp-namestore-${build.version}.jar"/>
		</fileset>
		<fileset dir="${namestore.lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>


  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target 	name="init"
			description="Initializes the build for rest of targets ">

	<!-- set time stamp properties -->
    <tstamp/>
	
	<!-- Give build.version a default value of SNAPSHOT -->
	<property name="build.version" value="SNAPSHOT"/>

    <echo message="----------- ${ant.project.name} ${build.version} ------------"/>

	<!-- Is JSSE installed?  This is an optional dependency for the SDK -->
	<available classname="javax.net.ssl.SSLSocket" property="ssl.present"/>

	<mkdir dir="${namestore.results.dir}" />
	<mkdir dir="${namestore.build.dir}" />
  	<mkdir dir="${namestore.epp.lib.dir}" />
  </target>


  <!-- =================================================================== -->
  <!-- Compiles source files                                     		   -->
  <!-- =================================================================== -->
  <target 	name="compile" depends="init"
  			description="Compiles the source files" >

    <echo message="${ant.project.name} ${build.version} Compile"/>
	
	<ant dir="${gen.dir}" target="jar"/>
	<ant dir="${domain.dir}" target="jar"/>
	<ant dir="${host.dir}" target="jar"/>
	<ant dir="${namestoreext.dir}" target="jar"/>
	<ant dir="${rgp.dir}" target="jar"/>
	<ant dir="${sync.dir}" target="jar"/>
	<ant dir="${nsfinance.dir}" target="jar"/>
	<ant dir="${idn.dir}" target="jar"/>
	<ant dir="${whois.dir}" target="jar"/>
 	<ant dir="${suggestions.dir}" target="jar"/>
   	<ant dir="${contact.dir}" target="jar"/>
  	<ant dir="${jobscontact.dir}" target="jar"/>
  	<ant dir="${secdns.dir}" target="jar"/>
  	<ant dir="${premiumdomain.dir}" target="jar"/>
	<ant dir="${whowas.dir}" target="jar"/>
  <ant dir="${coa.dir}" target="jar"/>
	
    <javac srcdir="${namestore.src.dir}"
		   destdir="${namestore.build.dir}"
           debug="${debug}"
           optimize="${optimize}"
		   deprecation="${deprecation}"
		   failonerror="true"
		   >
		<classpath refid="namestore.compile.classpath" />
	</javac>
  	
  </target>

  <!-- =================================================================== -->
  <!-- Creates epp-namestore.jar                                                -->
  <!-- =================================================================== -->
  <target 	name="jar" depends="init, compile"
  			description="Creates the jar file (epp-namestore.jar)" >
			
	<!-- Set default value of build.version to SNAPSHOT -->
	<property name="build.version" value="SNAPSHOT"/>

	<!-- Merge all component jar's into bundled jar -->
	<jar jarfile="${namestore.epp.lib.dir}/epp-namestore-${build.version}.jar" >
		<manifest>
				<attribute name="baseline" value="EPP-NameStore-SDK-${build.version}"/>
		</manifest>
		<zipgroupfileset dir="${namestore.epp.lib.dir}" 
			includes="*.jar" excludes="epp-namestore-*.jar"/>
		<fileset dir="${namestore.build.dir}"
			includes="com/**/*.class" />
			</jar>

  </target>
  
  <!-- =================================================================== -->
  <!-- Generate epp-namestore-src.jar                              		   -->
  <!-- =================================================================== -->
  <target 	name="jar-src" depends="init"
  			description="Build the source jar file" >

	<ant dir="${gen.dir}" target="jar-src"/>
	<ant dir="${domain.dir}" target="jar-src"/>
	<ant dir="${host.dir}" target="jar-src"/>
	<ant dir="${namestoreext.dir}" target="jar-src"/>
	<ant dir="${rgp.dir}" target="jar-src"/>
	<ant dir="${sync.dir}" target="jar-src"/>
	<ant dir="${nsfinance.dir}" target="jar-src"/>
	<ant dir="${idn.dir}" target="jar-src"/>
	<ant dir="${whois.dir}" target="jar-src"/>
 	<ant dir="${suggestions.dir}" target="jar-src"/>
   	<ant dir="${contact.dir}" target="jar-src"/>
  	<ant dir="${jobscontact.dir}" target="jar-src"/>
  	<ant dir="${secdns.dir}" target="jar-src"/>
	<ant dir="${premiumdomain.dir}" target="jar-src"/>
	<ant dir="${whowas.dir}" target="jar-src"/>
  	<ant dir="${coa.dir}" target="jar-src"/>
  	
	<!-- Create source.jar distribution -->
	<zip destfile="${namestore.dist.dir}/jar-src/epp-namestore-${build.version}-src.jar">
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-gen-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-domain-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-host-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-namestoreext-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-rgp-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-sync-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-nsfinance-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-idn-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-whois-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-suggestion-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-contact-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-jobsContact-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-secdns-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-premiumdomain-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-whowas-${build.version}-src.jar" />
		<zipfileset src="${namestore.dist.dir}/jar-src/epp-coa-${build.version}-src.jar" />
		<fileset dir="${namestore.dir}/java" includes="com/**/*.java" />
	</zip>
    
  </target>
  

  <!-- =================================================================== -->
  <!-- Formats the source code using Jalopy                                -->
  <!-- =================================================================== -->
  <target name="format" 
		  description="Formats the source code">
		  
	<ant dir="${gen.dir}" target="format"/>
	<ant dir="${domain.dir}" target="format"/>
	<ant dir="${host.dir}" target="format"/>
	<ant dir="${namestoreext.dir}" target="format"/>
	<ant dir="${rgp.dir}" target="format"/>
	<ant dir="${sync.dir}" target="format"/>
	<ant dir="${nsfinance.dir}" target="format"/>
	<ant dir="${idn.dir}" target="format"/>
	<ant dir="${whois.dir}" target="format"/>
	<ant dir="${suggestions.dir}" target="format"/>
	<ant dir="${contact.dir}" target="format"/>
	<ant dir="${jobscontact.dir}" target="format"/>
  	<ant dir="${secdns.dir}" target="format"/>
	<ant dir="${premiumdomain.dir}" target="format"/>
	<ant dir="${whowas.dir}" target="format"/>
  	<ant dir="${coa.dir}" target="format"/>

  </target>

  <!-- =================================================================== -->
  <!-- Creates the HTML API documentation                                  -->
  <!-- =================================================================== -->
  <target 	name="doc" depends="jar"
  			description="Creates the HTML API documentation" >

    <mkdir dir="${namestore.doc.dir}/html"/>
    <javadoc packagenames="com.verisign.epp.*"
             sourcepathref="namestore.src.path"
             destdir="${namestore.doc.dir}/html"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
			 breakiterator="true"
             windowtitle="${ant.project.name} API"
             doctitle="${ant.project.name}"
             bottom="Copyright &#169; VeriSign Inc. All Rights Reserved.">
		<classpath refid="namestore.test.classpath" />
	</javadoc>

  </target>



	<!-- =================================================================== -->
	<!-- Ensure that build.version is set                                    -->
	<!-- =================================================================== -->
	<target name="check-build-version" unless="build.version">
		<fail message="Must set build.version with -Dbuild.version=X"/>
	</target>

	<!-- =================================================================== -->
	<!-- Creates SDK source distribution                                     -->
	<!-- =================================================================== -->
	<target name="dist-src" depends="check-build-version"
				description = "Creates the source distribution (-Dbuild.version required)" >
		<mkdir dir="${namestore.dist.dir}" />
	
		<ant dir="${gen.dir}" target="dist-src"/>
		<ant dir="${domain.dir}" target="dist-src"/>
		<ant dir="${host.dir}" target="dist-src"/>
		<ant dir="${namestoreext.dir}" target="dist-src"/>
		<ant dir="${rgp.dir}" target="dist-src"/>
		<ant dir="${sync.dir}" target="dist-src"/>
		<ant dir="${nsfinance.dir}" target="dist-src"/>
		<ant dir="${idn.dir}" target="dist-src"/>
		<ant dir="${whois.dir}" target="dist-src"/>
		<ant dir="${suggestions.dir}" target="dist-src"/>
		<ant dir="${contact.dir}" target="dist-src"/>
		<ant dir="${jobscontact.dir}" target="dist-src"/>
		<ant dir="${secdns.dir}" target="dist-src"/>
		<ant dir="${premiumdomain.dir}" target="dist-src"/>
		<ant dir="${whowas.dir}" target="dist-src"/>
		<ant dir="${coa.dir}" target="dist-src"/>
		
		<echo message="----------- ${ant.project.name} ${build.version} Source Dist ------------"/>
	
		<!-- Create source .zip distribution -->
		<zip destfile="${namestore.dist.dir}/epp-namestore-${build.version}-src.zip">
			<zipfileset dir="${namestore.license.dir}" prefix="eppsdk/license"/>
			<zipfileset dir="${namestore.lib.dir}" prefix="eppsdk/lib">
				<exclude name="epp/**"/>
			</zipfileset>
			<zipfileset dir="${namestore.dir}" prefix="eppsdk/bundles/namestore">
				<exclude name="junit*"/>
				<exclude name="*.log*"/>
				<exclude name="*.err"/>
				<exclude name="doc/html/**"/>
				<exclude name="results/**"/>
				<exclude name="build/**"/>
				<exclude name="doc/*.doc"/>
			</zipfileset>
			<zipfileset src="${namestore.dist.dir}/epp-gen-${build.version}-src.zip" 
						includes="eppsdk/gen/**" excludes="eppsdk/gen/doc/*.pdf, eppsdk/gen/doc/*.README, eppsdk/gen/doc/*.INSTALL"/>
			<zipfileset src="${namestore.dist.dir}/epp-domain-${build.version}-src.zip" 
						includes="eppsdk/domain/**" excludes="eppsdk/domain/doc/*.pdf, eppsdk/domain/doc/*.README, eppsdk/domain/doc/*.INSTALL"/>
			<zipfileset src="${namestore.dist.dir}/epp-host-${build.version}-src.zip" 
						includes="eppsdk/host/**" excludes="eppsdk/host/doc/*.pdf, eppsdk/host/doc/*.README, eppsdk/host/doc/*.INSTALL"/>
			<zipfileset src="${namestore.dist.dir}/epp-namestoreext-${build.version}-src.zip" 
						includes="eppsdk/namestoreext/**" excludes="eppsdk/namestoreext/doc/*.README, eppsdk/namestoreext/doc/*.INSTALL"/>
			<zipfileset src="${namestore.dist.dir}/epp-rgp-${build.version}-src.zip" 
						includes="eppsdk/rgp/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-sync-${build.version}-src.zip" 
						includes="eppsdk/sync/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-nsfinance-${build.version}-src.zip" 
						includes="eppsdk/nsfinance/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-idn-${build.version}-src.zip" 
						includes="eppsdk/idn/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-whois-${build.version}-src.zip" 
						includes="eppsdk/whois/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-suggestion-${build.version}-src.zip" 
						includes="eppsdk/suggestion/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-contact-${build.version}-src.zip" 
						includes="eppsdk/contact/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-jobsContact-${build.version}-src.zip" 
						includes="eppsdk/jobsContact/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-secdns-${build.version}-src.zip" 
						includes="eppsdk/secdns/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-premiumdomain-${build.version}-src.zip" 
						includes="eppsdk/premiumdomain/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-whowas-${build.version}-src.zip"
						includes="eppsdk/whowas/**"/>
			<zipfileset src="${namestore.dist.dir}/epp-coa-${build.version}-src.zip" 
			            includes="eppsdk/coa/**"/>
		</zip>
		
		<!-- Create source .tar.gz distribution -->
		<!-- unzip the zip distribution into tmp directory for create tar -->
		<mkdir dir="${namestore.tmp.dir}" />
		<unzip src="${namestore.dist.dir}/epp-namestore-${build.version}-src.zip"
			   dest="${namestore.tmp.dir}"/>
		<tar destfile="${namestore.dist.dir}/epp-namestore-${build.version}-src.tar.gz"
			compression="gzip">
			<tarfileset dir="${namestore.tmp.dir}" mode="775">
				<include name="eppsdk/**/*.sh"/>
			</tarfileset>
			<tarfileset dir="${namestore.tmp.dir}">
				<exclude name="eppsdk/**/*.sh"/>
			</tarfileset>
		</tar>
		<delete dir="${namestore.tmp.dir}" />
		
	</target>
		


	<!-- =================================================================== -->
	<!-- Creates SDK binary distribution                                     -->
	<!-- =================================================================== -->
	<target name="dist-bin" depends="check-build-version, doc"
				description = "Creates the binary distribution (-Dbuild.version required)" >
		<mkdir dir="${namestore.dist.dir}" />
		<mkdir dir="${namestore.tmp.dir}" />
		
		<echo message="----------- ${ant.project.name} ${build.version} Binary Dist ------------"/>
		
		<copy file="${namestore.dir}/build-bin.xml" tofile="${namestore.tmp.dir}/build.xml"/>
	
		<!-- Give build.version a default value of SNAPSHOT -->
		<property name="build.version" value="SNAPSHOT"/>
		
		<!-- Create binary .zip distribution -->
		<zip destfile="${namestore.dist.dir}/epp-namestore-${build.version}-bin.zip">
			<zipfileset dir="${namestore.license.dir}" prefix="eppsdk/license"/>
			<zipfileset dir="${namestore.lib.dir}" prefix="eppsdk/lib">
				<exclude name="epp/**"/>
				<exclude name="jalopy/**"/>
			</zipfileset>
			<zipfileset dir="${namestore.epp.lib.dir}" prefix="eppsdk/lib/epp">
				<include name="epp-namestore-${build.version}.jar"/>
			</zipfileset>			
			<zipfileset dir="${namestore.tmp.dir}" includes="build.xml" prefix="eppsdk/bundles/namestore"/>
			<zipfileset dir="${namestore.dir}" prefix="eppsdk/bundles/namestore">
				<exclude name="*.log"/>
				<exclude name="*.err"/>
				<exclude name="build.xml"/>
				<exclude name="build-bin.xml"/>
				<exclude name="results/**"/>
				<exclude name="tmp/**"/>
				<exclude name="doc/*.doc"/>
			</zipfileset>
			
			<!-- Add mapping and extension specifications -->
			<zipfileset dir="${gen.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="*.txt"/>
			</zipfileset>			
			<zipfileset dir="${domain.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="epp-domain.txt"/>
			</zipfileset>			
			<zipfileset dir="${host.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="epp-host.txt"/>
			</zipfileset>			
			<zipfileset dir="${namestoreext.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="EPP-*-Mapping.pdf"/>
			</zipfileset>			
			<zipfileset dir="${rgp.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="*.txt"/>
				<include name="*.pdf"/>
			</zipfileset>			
			<zipfileset dir="${sync.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="*.txt"/>
			</zipfileset>			
			<zipfileset dir="${nsfinance.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
					<include name="*.pdf"/>
			</zipfileset>			
			<zipfileset dir="${idn.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
					<include name="*.pdf"/>
			</zipfileset>			
			<zipfileset dir="${whois.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
					<include name="*.pdf"/>
			</zipfileset>			
			<zipfileset dir="${suggestions.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
					<include name="*.pdf"/>
			</zipfileset>
			<zipfileset dir="${contact.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
					<include name="*.txt"/>
			</zipfileset>			
			<zipfileset dir="${jobscontact.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="*.pdf"/>
			</zipfileset>	
			<zipfileset dir="${secdns.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="*.txt"/>
			</zipfileset>
			<zipfileset dir="${premiumdomain.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
				<include name="*.pdf"/>
			</zipfileset>
 			<zipfileset dir="${whowas.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
 					<include name="*.pdf"/>
			</zipfileset>
			<zipfileset dir="${coa.doc.dir}" prefix="eppsdk/bundles/namestore/doc">
          <include name="*.pdf"/>
      </zipfileset>
		</zip>
		<delete dir="${namestore.tmp.dir}"/>

		<!-- Create source .tar.gz distribution -->
		<!-- unzip the zip distribution into tmp directory for create tar -->
		<mkdir dir="${namestore.tmp.dir}" />
		<unzip src="${namestore.dist.dir}/epp-namestore-${build.version}-bin.zip"
			   dest="${namestore.tmp.dir}"/>
		<tar destfile="${namestore.dist.dir}/epp-namestore-${build.version}-bin.tar.gz"
			compression="gzip">
			<tarfileset dir="${namestore.tmp.dir}" mode="775">
				<include name="eppsdk/**/*.sh"/>
			</tarfileset>
			<tarfileset dir="${namestore.tmp.dir}">
				<exclude name="eppsdk/**/*.sh"/>
			</tarfileset>
		</tar>
		<delete dir="${namestore.tmp.dir}" />


	</target>

	<!-- =================================================================== -->
	<!-- Creates SDK distributions						                     -->
	<!-- =================================================================== -->
	<target name="dist" depends="dist-src, dist-bin"
				description = "Creates the distributions (-Dbuild.version required)" >
	</target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target 	name="clean" depends="init"
			description="Cleans the built files and directories" >
			
		<!-- Clean build directory -->
		<delete dir="${namestore.build.dir}" quiet="true"/>

  		<!-- Clean dependent project build directories -->
		<ant dir="${gen.dir}" target="clean"/>
		<ant dir="${domain.dir}" target="clean"/>
		<ant dir="${host.dir}" target="clean"/>
		<ant dir="${namestoreext.dir}" target="clean"/>
		<ant dir="${rgp.dir}" target="clean"/>
		<ant dir="${sync.dir}" target="clean"/>
		<ant dir="${nsfinance.dir}" target="clean"/>
		<ant dir="${idn.dir}" target="clean"/>
		<ant dir="${whois.dir}" target="clean"/>
		<ant dir="${suggestions.dir}" target="clean"/>
  		<ant dir="${contact.dir}" target="clean"/>
		<ant dir="${jobscontact.dir}" target="clean"/>
  	    <ant dir="${secdns.dir}" target="clean"/>
		<ant dir="${premiumdomain.dir}" target="clean"/>
		<ant dir="${whowas.dir}" target="clean"/>
  	<ant dir="${coa.dir}" target="clean"/>
		
		<!-- Clean the EPP lib directory -->
		<delete dir="${namestore.epp.lib.dir}" quiet="true"/>

		<!-- Clean results directory -->
		<delete dir="${namestore.results.dir}" quiet="true"/>

		<!-- Clean log files -->
		<delete>
			<fileset dir="${namestore.dir}" includes="*.log, *.err"/>
		</delete>

		<!-- Clean generated documentation files -->
		<delete dir="${namestore.doc.dir}/html" quiet="true"/>

		<!-- Clean distribution directory -->
		<delete dir="${namestore.dist.dir}" quiet="true"/>

		<!-- Clean the tmp directory -->
		<delete dir="${namestore.tmp.dir}" quiet="true"/>
		
  </target>

</project>

<!-- End of file -->
