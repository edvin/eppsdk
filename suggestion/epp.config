#############################################################################
# Copyright (C) 2001 VeriSign Corporation
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# VeriSign Corporation.
# 505 Huntmar Park Dr.
# Herndon, VA 20170
#
##############################################################################
#
# The EPP, APIs and Software are provided "as-is" and without any warranty
# of any kind. VeriSign Corporation EXPRESSLY DISCLAIMS ALL WARRANTIES
# AND/OR CONDITIONS, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES AND CONDITIONS OF MERCHANTABILITY OR SATISFACTORY
# QUALITY AND FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF THIRD
# PARTY RIGHTS. VeriSign Corporation DOES NOT WARRANT THAT THE FUNCTIONS
# CONTAINED IN THE EPP, APIs OR SOFTWARE WILL MEET REGISTRAR'S REQUIREMENTS,
# OR THAT THE OPERATION OF THE EPP, APIs OR SOFTWARE WILL BE UNINTERRUPTED
# OR ERROR-FREE,OR THAT DEFECTS IN THE EPP, APIs OR SOFTWARE WILL BE CORRECTED.
# FURTHERMORE, VeriSign Corporation DOES NOT WARRANT NOR MAKE ANY
# REPRESENTATIONS REGARDING THE USE OR THE RESULTS OF THE EPP, APIs, SOFTWARE
# OR RELATED DOCUMENTATION IN TERMS OF THEIR CORRECTNESS, ACCURACY,
# RELIABILITY, OR OTHERWISE.  SHOULD THE EPP, APIs OR SOFTWARE PROVE DEFECTIVE,
# REGISTRAR ASSUMES THE ENTIRE COST OF ALL NECESSARY SERVICING, REPAIR OR
# CORRECTION.
#
# $Id: epp.config,v 1.1.1.1 2003/12/05 17:36:21 jim Exp $
#
# epp.config is a configuration file used by both the sample EPP Client
# (com.verisign.epp.interfaces.EPPApplicationSingleTst) and the sample
# EPP Server (com.verisign.epp.serverstub.Server).  Some of the
# settings a generic and some settings or specific to either the
# sample EPP Client or the sample EPP Server.
##############################################################################


############################################################
# Log Configuration Mode.  The mode controls the 
# way by which the logging facility (Log4J) is initialized.
# There are three different modes:
#
# 	BASIC - Initialize logging using EPP.LogLevel 
#           and EPP.LogFile
#   CFGFILE - Initialize logging using EPP.LogCfgFile and 
#             optionally EPP.LogCfgFileWatch
#   CUSTOM	- SDK will not initialize the logging facility
#             and it is left up to the client application.
#
# The Server Stub does not consult EPP.LogMode, and will 
# initialize its logging facility based on the following:
#    If EPP.LogCfgfile is defined
#       Use EPP.LogCfgFile and use EPP.LogCfgFileWatch if 
#       defined
#    Else if EPP.LogFile and EPP.LogLevel is defined
#       Use EPP.LogFile and use EPP.LogLevel
#    Else
#       Print error and stop program.
############################################################
EPP.LogMode = CFGFILE


############################################################
# Log4J Log Level.  The root category will be set to
# on of the following priorities in order of severity:
# 	DEBUG
# 	INFO
# 	WARN
# 	ERROR
# 	FATAL
# ############################################################
EPP.LogLevel = DEBUG


############################################################
# Log4J Log File Name.  Logs will be appended to
# the log file.
############################################################
EPP.LogFile  = epp.log

############################################################
# Log4J XML configuration file used to defined the log 
# levels and the appenders (file, syslog, etc.).
############################################################
EPP.LogCfgFile = logconfig.xml

############################################################
# Interval in milliseconds to monitor for changes to 
# EPP.LogCfgFile.  If EPP.LogCfgFile is updated, the 
# log settings will be re-loaded.
############################################################
EPP.LogCfgFileWatch = 5000


############################################################
# Connection and read timeout in milliseconds.
# A setting of 0 indiciates no timeout.  This setting
# applies to both the client and the server.
############################################################
EPP.ConTimeOut       = 50000


############################################################
# Concrete client socket class.  Possible settings include:
#
# 	com.verisign.epp.transport.client.EPPPlainClientSocket
#		Plain TCP/IP socket connection(s)
#
#	com.verisign.epp.transport.client.EPPPlainClientFile
#		File based connection.  Input file name
#		is set to EPP.ServerName and the output file name is "EPPOutput".
#
#	com.verisign.epp.transport.client.EPPSSLClientSocket
#		SSL TCP/IP socket connection(s).
#		Only supported with Java 2 and the JSSE extension.
############################################################
EPP.ClientSocketName = com.verisign.epp.transport.client.EPPPlainClientSocket
#EPP.ClientSocketName = com.verisign.epp.transport.client.EPPSSLClientSocket


############################################################
# Host name or IP Address that the server will listen on
# and the client will connect to.  EPP.ServerName is also
# the input file name when EPP.ClientSocketName is set
# to com.verisign.epp.transport.client.EPPPlainClientFile
############################################################
EPP.ServerName       = localhost

############################################################
# Port that the server will liston on and the client will
# connect to.
############################################################
EPP.ServerPort       = 1700

############################################################
# Concrete server socket class.  Possible settings include:
#
# 	com.verisign.epp.transport.client.EPPPlainServer
#		Plain TCP/IP socket connection(s)
#
#	com.verisign.epp.transport.client.EPPSSLServer
#		SSL TCP/IP socket connection(s).
#		Only supported with Java 2 and the JSSE extension.
############################################################
EPP.ServerSocketName = com.verisign.epp.transport.server.EPPPlainServer
#EPP.ServerSocketName = com.verisign.epp.transport.server.EPPSSLServer


############################################################
# List of fully qualified EPP Mapping Factory class names.  There
# is one EPP Mapping Factory per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec).
############################################################
EPP.MapFactories = com.verisign.epp.codec.suggestion.EPPSuggestionMapFactory  
EPP.ProtocolExtensions=
EPP.CmdRspExtensions=

############################################################
# List of fully qualified EPP Event Handler class names.  There
# is one EPP Event Handler per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec).
############################################################
EPP.ServerEventHandlers = \
	com.verisign.epp.serverstub.GenHandler \
	com.verisign.epp.serverstub.SuggestionHandler

############################################################
# List of fully qualified EPP Poll Handler class names.  There
# is one EPP Poll Handler per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec).
############################################################
EPP.PollHandlers = 

############################################################
# A fully qualified EPP Poll DataSource class names.  There
# is one EPP Poll DataSource per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec).
############################################################
EPP.PollDataSource = 

###########################################################
# SSL Socket Option
#
# <<<<<< Important This is Implementation Dependent >>>>>>
#
# Protocol Supported with this implementation (Factory)
#
# SSL Supports some version of SSL
# SSLv2 Supports SSL version 2 or higher
# SSLv3 Supports SSL version 3
# TLS Supports some version of TLS
# TLSv1 Supports TLS version 1
#
#
###########################################################

EPP.SSLProtocol=TLS

###########################################################
# SSL Socket Option
#
# <<<<<< Important This is Implementation Dependent >>>>>>
#
# JSSE key managers: These manage the key material
# which is used to authenticate to the peer of a
# secure socket.
###########################################################

EPP.SSLKeyManager=SunX509

###########################################################
# SSL Socket Option
#
# <<<<<< Important This is Implementation Dependent >>>>>>
#
# convert keys into key specifications , and vice versa.
###########################################################
EPP.SSLKeyStore=JKS

###########################################################
# SSL Socket Option
#
# <<<<<< Important This is Implementation Dependent >>>>>>
#
# File Name Containing the Keys.
###########################################################
EPP.SSLKeyFileName=../lib/keystore/testkeys

###########################################################
# SSL Socket Option
#
# <<<<<< Important This is Implementation Dependent >>>>>>
#
# Password associated with files
###########################################################
EPP.SSLPassPhrase=passphrase


###########################################################
# SSL trust keystore file name.  
###########################################################
EPP.SSLTrustStoreFileName=../lib/keystore/testkeys

###########################################################
# SSL trust passphrase.  EPP.SSLPassPhrase is required 
# and is needed to open the trust keystore file.  
###########################################################
EPP.SSLTrustStorePassPhrase=passphrase


###########################################################
# SSL Socket Option
#
# <<<<<< Important This is Implementation Dependent >>>>>>
#
# debug options
###########################################################
#javax.net.debug=all
javax.net.debug=none

EPP.ProtocolExtensions=
EPP.CmdRspExtensions=

##########################################################
# PoolMan - Generic Pool Manager
#
# Client default options
#
# initialObjects=1
# minimumSize=0
# maximumSize=Integer.MAX_VALUE
# maximumSoft=true
# objectTimeout=1200 (seconds)
# userTimeout=1200 (seconds)
# skimmerFrequency=660 (seconds)
# shrinkBy=5
# logFile=System.out
# debugging=false
#
#########################################################
PoolMan.Client.name=clientpool
PoolMan.Client.objectType=com.verisign.epp.util.EPPClientPool
PoolMan.Client.logFile=clientpool.log
PoolMan.Client.initialObjects=5
PoolMan.Client.minimumSize=5
PoolMan.Client.debugging=false

##########################################################
# PoolMan - Generic Pool Manager
#
# Server default options
#
# initialObjects=1
# minimumSize=0
# maximumSize=Integer.MAX_VALUE
# maximumSoft=true
# objectTimeout=1200 (seconds)
# userTimeout=1200 (seconds)
# skimmerFrequency=660 (seconds)
# shrinkBy=5
# logFile=System.out
# debugging=false
#
#########################################################
PoolMan.Server.name=serverpool
PoolMan.Server.objectType=com.verisign.epp.util.EPPServerPool
PoolMan.Server.initialObjects=10
PoolMan.Server.minimumSize=10
PoolMan.Server.logFile=serverpool.log
PoolMan.Server.debugging=false


